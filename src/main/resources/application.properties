server.port=8080

mybatis.mapper-locations=classpath:mybatis/*.xml
mybatis.type-aliases-package=me.lv.record.entity

spring.datasource.url=jdbc:mysql://139.180.202.196:3306/test?characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC 
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# 使用druid数据源
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,slf4j
# 初始化大小，最小，最大
spring.datasource.initialSize:1
spring.datasource.maxActive:20
spring.datasource.minIdle:1
# 配置获取连接等待超时的时间
spring.datasource.maxWait:60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis:60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis:300000
spring.datasource.validationQuery:select 'x'
spring.datasource.testWhileIdle:true
spring.datasource.testOnBorrow:false
spring.datasource.testOnReturn:false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements:true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true